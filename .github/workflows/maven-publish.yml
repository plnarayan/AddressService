# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: AddressBook

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
       # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
       # settings-path: ${{ github.workspace }} # location for the settings.xml file

      # Step 3: Build the project with Maven (skip tests)
    - name: Build with Maven
      run: mvn -f ./pom.xml clean install -DskipTests
      
    - name: Set up Git
      run: |
        git config --global user.name '${{ secrets.MY_USER_NAME }}'
        git config --global user.email '${{ secrets.MY_EMIAL }}'

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ github.sha }}
        release_name: Release v${{ github.sha }}
        run : v${{ github.sha }}
        
        draft: false
        prerelease: false
        generate_release_notes: true

   # - name: Publish to GitHub Packages Apache Maven
   #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
   #   env:
   #     GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}

  #  - name: Publish to GitHub Packages Apache Maven
   #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
     #   GITHUB_TOKEN: ${{ github.token }}
